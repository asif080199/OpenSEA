/*--------------------------------*- C++ -*------------------------------------*\
| O pen         | OpenSea:  The Open Source Seakeeping Suite                    |
| S eakeeping   | Version:  1.0                                                 |
| E valuation   | Web:      www.opensea.dmsonline.us                            |
| A nalysis     |                                                               |
\*-----------------------------------------------------------------------------*/
seafile
{
    version     1.0;
    format      ascii;
    object      dictionary;
}


// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

//The outputs objects specify which outputs oFreq should create and
//assigns any necessary parameters for each output.

repBodyAcceleration {
  name "Acceleration 1";
  body "body1";
}

repBodyVelocity {
  name "Velocity 1";
  body "body1";
}

repBodyMotion {
  name "Motion 1";
  body "body1";
}

repBodySolution {
  name "Solution - ord 5";
  body "body1";
  order 5;
}

repLocalAcceleration {
  name "Local Acceleration";
  body "body1";
  location (
    1.0
    2.0
    3.0
  );
}

repLocalSolution {
  name "Local Solution - ord 1";
  body "body1";
  location (
    1.0
    2.0
    3.0
  );
  order 1;
}

repWaveSpectra {
  name "Body Wave Spectra";
  body "body1";
  output "wave_amp";
}

repDynamicFreeboard {
  name "Dynamic freeboard";
  body "body1";
  location (
    1.0
    2.0
    3.0
  );
}  
  
repBodyForce
{
  name "Total Body Force";
  body "body1";
  category "total";
}

repBodyPower
{
  name "Total Body Power";
  body "body1";
  category "total";
}

repCaptureWidth
{
  name "Capture Width";
  body "body1";
  repPower "Total Body Power";
  variables (
    3
    4
    5
    6
  );
}

repRelativeEfficiency
{
  name "Relative Efficiency";
  body "body1";
  repPower "Total Body Power";
  variables (
    3
    4
    5
    6
  );
  length 1.0;
}

repAbsoluteEfficiency
{
  name "Relative Efficiency";
  body "body1";
  repPower "Total Body Power";
  variables (
    3
    4
    5
    6
  );
}  





















// ************************************************************************* //
